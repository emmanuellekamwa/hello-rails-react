{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport { loadGreetingData } from \"./greeting\";\nvar URL = 'greetings';\nexport var getGreetingData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n    var response, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(URL);\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            data = _context.sent;\n            dispatch(loadGreetingData(data));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getGreetingData(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/kamwa/hello-rails-react/app/javascript/redux/api.js"],"names":["loadGreetingData","URL","getGreetingData","dispatch","fetch","response","json","data"],"mappings":";;;;;;AAAA,SAASA,gBAAT,QAAiC,YAAjC;AAEA,IAAMC,GAAG,GAAG,WAAZ;AAEA,OAAO,IAAMC,eAAe;AAAA,sEAAG,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJC,KAAK,CAAEH,GAAF,CADD;;AAAA;AACrBI,YAAAA,QADqB;AAAA;AAAA,mBAERA,QAAQ,CAACC,IAAT,EAFQ;;AAAA;AAErBC,YAAAA,IAFqB;AAG3BJ,YAAAA,QAAQ,CAACH,gBAAgB,CAACO,IAAD,CAAjB,CAAR;;AAH2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfL,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import { loadGreetingData } from \"./greeting\";\n\nconst URL = 'greetings';\n\nexport const getGreetingData = async (dispatch) => {\n    const response = await fetch (URL);\n    const data = await response.json();\n    dispatch(loadGreetingData(data));\n};"]},"metadata":{},"sourceType":"module"}